{
  "_fv": 60,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable type=\"Number\" id=\"num\">num</variable><variable type=\"Number\" id=\"modifierindex\">modifierindex</variable><variable type=\"List\" id=\"whitelist\">whitelist</variable><variable type=\"JsonObject\" id=\"quality\">quality</variable><variable type=\"JsonObject\" id=\"modf\">modf</variable><variable type=\"String\" id=\"modifier\">modifier</variable><variable type=\"String\" id=\"key\">key</variable><variable type=\"String\" id=\"modtype\">modtype</variable><variable type=\"String\" id=\"additive\">additive</variable><variable type=\"String\" id=\"fuck\">fuck</variable></variables><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">tooltip_event</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"compare_mcitems\"><value name=\"a\"><block type=\"itemstack_to_mcitem\"></block></value><value name=\"b\"><block type=\"mcitem_all\"><field name=\"value\">CUSTOM:ReforgeGuiButton</field></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">tooltip.clear();</field></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">itemstack.hasTag()</field></block></value><statement name=\"DO0\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">itemstack.getTag().contains(\"Reforge\")</field></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">Component nbtc = null;&amp;#10;Component idc = null;</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">((ItemTooltipEvent)event).getFlags().isAdvanced()</field></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">nbtc = tooltip.get(tooltip.size() - 1);&amp;#10;idc = tooltip.get(tooltip.size() - 2);&amp;#10;tooltip.remove(tooltip.size() - 1);&amp;#10;tooltip.remove(tooltip.size() - 1);</field></block></statement><next><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text\"><field name=\"TEXT\"></field></block></value><next><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">quality_equipment.quality</field></block></value></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"item_nbt_text_get\"><value name=\"tagName\"><block type=\"text\"><field name=\"TEXT\">Reforge</field></block></value><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value></block></value><next><block type=\"java_code\"><field name=\"CODE\">List&lt;Component&gt; modifiers = new ArrayList&lt;&gt;();</field><next><block type=\"java_code\"><field name=\"CODE\">List&lt;Integer&gt; erasures = new ArrayList&lt;&gt;();</field><next><block type=\"java_code\"><field name=\"CODE\">String classname = itemstack.getItem().getClass().getName();</field><next><block type=\"controls_if\"><mutation elseif=\"3\"></mutation><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">itemstack.getItem() instanceof TieredItem || QualityEquipmentModVariables.tetraItems.contains(classname)</field></block></value><statement name=\"DO0\"><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field><value name=\"VAL\"><block type=\"text\"><field name=\"TEXT\">tool</field></block></value></block></statement><value name=\"IF1\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">QualityEquipmentModVariables.tetraBows.contains(classname)</field></block></value></block></value><statement name=\"DO1\"><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field><value name=\"VAL\"><block type=\"text\"><field name=\"TEXT\">bow</field></block></value></block></statement><value name=\"IF2\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Shield</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">classname.equals(\"se.mickelus.tetra.items.modular.impl.shield.ModularShieldItem\")</field></block></value></block></value><statement name=\"DO2\"><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field><value name=\"VAL\"><block type=\"text\"><field name=\"TEXT\">shield</field></block></value></block></statement><value name=\"IF3\"><block type=\"item_istype\"><field name=\"item_type\">Armor</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><statement name=\"DO3\"><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field><value name=\"VAL\"><block type=\"text\"><field name=\"TEXT\">armor</field></block></value></block></statement><next><block type=\"stringlist_variable_foreach\"><field name=\"variable\">qualities</field><field name=\"config\">CUSTOM:Reforges</field><value name=\"_placeholder\"><block type=\"stringlist_iterator\"></block></value><statement name=\"foreach\"><block type=\"java_code\"><field name=\"CODE\">String[] keypair = stringiterator.split(\"=\");</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"item_nbt_text_get\"><value name=\"tagName\"><block type=\"text\"><field name=\"TEXT\">Reforge</field></block></value><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">keypair[0]</field></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">\t\t\t\t\t\tquality = new Object() {&amp;#10;\t\t\t\t\t\t\tpublic com.google.gson.JsonObject parse(String rawJson) {&amp;#10;\t\t\t\t\t\t\t\ttry {&amp;#10;\t\t\t\t\t\t\t\t\treturn new com.google.gson.Gson().fromJson(rawJson, com.google.gson.JsonObject.class);&amp;#10;\t\t\t\t\t\t\t\t} catch (Exception e) {&amp;#10;\t\t\t\t\t\t\t\t\tQualityEquipmentMod.LOGGER.error(e);&amp;#10;\t\t\t\t\t\t\t\t\treturn new com.google.gson.Gson().fromJson(\"{}\", com.google.gson.JsonObject.class);&amp;#10;\t\t\t\t\t\t\t\t}&amp;#10;\t\t\t\t\t\t\t}&amp;#10;\t\t\t\t\t\t}.parse(keypair[1]);</field><next><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:fuck</field><value name=\"VAL\"><block type=\"get_json_text\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:quality</field><value name=\"name\"><block type=\"text\"><field name=\"TEXT\">type</field></block></value></block></value><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_ternary_op\" inline=\"false\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" mark=\"false\"></mutation><value name=\"condition\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field></block></value><value name=\"B\"><block type=\"text\"><field name=\"TEXT\">armor</field></block></value></block></value><value name=\"THEN\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:fuck</field></block></value><value name=\"B\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">((ArmorItem)itemstack.getItem()).getType() == ArmorItem.Type.HELMET &amp;&amp; fuck.equals(\"helmet\")</field></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">((ArmorItem)itemstack.getItem()).getType() == ArmorItem.Type.CHESTPLATE &amp;&amp; fuck.equals(\"chestplate\")</field></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">((ArmorItem)itemstack.getItem()).getType() == ArmorItem.Type.LEGGINGS &amp;&amp; fuck.equals(\"leggings\")</field></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">((ArmorItem)itemstack.getItem()).getType() == ArmorItem.Type.BOOTS &amp;&amp; fuck.equals(\"boots\")</field></block></value></block></value></block></value></block></value></block></value><value name=\"ELSE\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:fuck</field></block></value><value name=\"B\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modtype</field></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">com.google.gson.JsonArray modifiersarr = quality.get(\"modifiers\").getAsJsonArray();</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><block type=\"java_code_get\"><field name=\"CODE\">modifiersarr.size()</field></block></value><statement name=\"DO\"><block type=\"variables_set_jsonobject\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modf</field><value name=\"VAL\"><block type=\"java_code_get\"><field name=\"CODE\">modifiersarr.get(index0).getAsJsonObject();</field></block></value><next><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:additive</field><value name=\"VAL\"><block type=\"text_join\"><mutation items=\"1\"></mutation><value name=\"ADD0\"><block type=\"math_singular_ops\"><field name=\"OP\">ABS</field><value name=\"NUM\"><block type=\"logic_ternary_op\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" mark=\"false\"></mutation><value name=\"condition\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">modf.get(\"attribute\").getAsString().split(\":\")[1]</field></block></value><value name=\"B\"><block type=\"text\"><field name=\"TEXT\">generic.knockback_resistance</field></block></value></block></value><value name=\"THEN\"><block type=\"math_dual_ops\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"get_json_number\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modf</field><value name=\"name\"><block type=\"text\"><field name=\"TEXT\">value</field></block></value></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">10</field></block></value></block></value><value name=\"ELSE\"><block type=\"get_json_number\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modf</field><value name=\"name\"><block type=\"text\"><field name=\"TEXT\">value</field></block></value></block></value></block></value></block></value></block></value><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"text_ends_with\"><value name=\"text\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:additive</field></block></value><value name=\"ends\"><block type=\"text\"><field name=\"TEXT\">.0</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:additive</field><value name=\"VAL\"><block type=\"text_format_number\"><value name=\"number\"><block type=\"math_from_text\"><value name=\"NUMTEXT\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:additive</field></block></value></block></value><value name=\"format\"><block type=\"text\"><field name=\"TEXT\">###</field></block></value></block></value></block></statement><next><block type=\"arraylist_add_value\"><value name=\"value\"><block type=\"text_join\"><mutation items=\"3\"></mutation><value name=\"ADD0\"><block type=\"java_code_get\"><field name=\"CODE\">ForgeRegistries.ATTRIBUTES.getValue(new ResourceLocation(modf.get(\"attribute\").getAsString())).getDescriptionId()</field></block></value><value name=\"ADD1\"><block type=\"text\"><field name=\"TEXT\">,args=[</field></block></value><value name=\"ADD2\"><block type=\"logic_ternary_op\" inline=\"false\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" mark=\"null\"></mutation><value name=\"condition\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"get_json_text\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modf</field><value name=\"name\"><block type=\"text\"><field name=\"TEXT\">operation</field></block></value></block></value><value name=\"B\"><block type=\"text\"><field name=\"TEXT\">addition</field></block></value></block></value><value name=\"THEN\"><block type=\"variables_get_string\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:additive</field></block></value><value name=\"ELSE\"><block type=\"text_format_number\"><value name=\"number\"><block type=\"math_singular_ops\"><field name=\"OP\">ABS</field><value name=\"NUM\"><block type=\"math_dual_ops\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"get_json_number\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:modf</field><value name=\"name\"><block type=\"text\"><field name=\"TEXT\">value</field></block></value></block></value><value name=\"B\"><block type=\"logic_ternary_op\" inline=\"false\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" mark=\"false\"></mutation><value name=\"condition\"><block type=\"text_binary_ops\"><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">modf.get(\"attribute\").getAsString().split(\":\")[1]</field></block></value><value name=\"B\"><block type=\"text\"><field name=\"TEXT\">generic.knockback_resistance</field></block></value></block></value><value name=\"THEN\"><block type=\"math_number\"><field name=\"NUM\">1000</field></block></value><value name=\"ELSE\"><block type=\"math_number\"><field name=\"NUM\">100</field></block></value></block></value></block></value></block></value><value name=\"format\"><block type=\"text\"><field name=\"TEXT\">###</field></block></value></block></value></block></value></block></value><value name=\"var\"><block type=\"variables_get_arraylist\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:whitelist</field></block></value></block></next></block></next></block></next></block></statement></block></next></block></statement></block></next></block></next></block></statement></block></next></block></statement><next><block type=\"java_code\"><field name=\"CODE\">boolean remove = true;</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">remove = false;</field></block></statement><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><block type=\"get_tooltip_line_count\"></block></value><statement name=\"DO\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">tooltip.get((int)num).getString().equals(Component.translatable(\"item.modifiers.offhand\").getString())</field></block></value><statement name=\"DO0\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">remove = true;</field></block></statement></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">AND</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"text_contains\"><value name=\"text\"><block type=\"get_tooltip_line\"><value name=\"line\"><block type=\"java_code_get\"><field name=\"CODE\">(int)num</field></block></value></block></value><value name=\"contains\"><block type=\"text\"><field name=\"TEXT\">[style={color=blue}]</field></block></value></block></value><value name=\"B\"><block type=\"text_contains\"><value name=\"text\"><block type=\"get_tooltip_line\"><value name=\"line\"><block type=\"java_code_get\"><field name=\"CODE\">(int)num</field></block></value></block></value><value name=\"contains\"><block type=\"text\"><field name=\"TEXT\">[style={color=red}]</field></block></value></block></value></block></value><value name=\"B\"><block type=\"text_contains\"><value name=\"text\"><block type=\"get_tooltip_line\"><value name=\"line\"><block type=\"java_code_get\"><field name=\"CODE\">(int)num</field></block></value></block></value><value name=\"contains\"><block type=\"text\"><field name=\"TEXT\">translation{key='attribute.modifier.</field></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">int index = 0;&amp;#10;for (Object objitem : whitelist) {&amp;#10;    String[] listitems = ((String) objitem).split(\",\");&amp;#10;    String listitem1 = listitems[0];&amp;#10;    String listitem2 = listitems[1];&amp;#10;    String tooltipstr = tooltip.get((int)num).toString();&amp;#10;    if (tooltipstr.contains(listitem1) &amp;&amp; tooltipstr.contains(listitem2)) {&amp;#10;        if (remove)&amp;#10;            whitelist.remove(index);&amp;#10;        modifiers.add(tooltip.get((int)num));&amp;#10;        erasures.add((int)num);&amp;#10;        break;&amp;#10;    }&amp;#10;    index++;&amp;#10;}</field></block></statement><next><block type=\"variables_set_number\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:num</field><value name=\"VAL\"><block type=\"math_dual_ops\"><field name=\"OP\">ADD</field><value name=\"A\"><block type=\"variables_get_number\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:num</field></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block></value></block></next></block></next></block></statement><next><block type=\"java_code\"><field name=\"CODE\">for (int i = 0; i &lt; erasures.size(); i++)&amp;#10;    tooltip.remove(erasures.get(i) - i);</field><next><block type=\"controls_if\"><mutation elseif=\"3\"></mutation><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">itemstack.getItem() instanceof TieredItem || QualityEquipmentModVariables.tetraItems.contains(itemstack.getItem().getClass().getName())</field></block></value><statement name=\"DO0\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.mainhand</field></block></value></block></value></block></value></block></statement><value name=\"IF1\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">QualityEquipmentModVariables.tetraBows.contains(classname)</field></block></value></block></value><statement name=\"DO1\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.mainhand</field></block></value></block></value></block></value><next><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.offhand</field></block></value></block></value></block></value></block></next></block></statement><value name=\"IF2\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Shield</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">classname.equals(\"se.mickelus.tetra.items.modular.impl.shield.ModularShieldItem\")</field></block></value></block></value><statement name=\"DO2\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.offhand</field></block></value></block></value></block></value></block></statement><value name=\"IF3\"><block type=\"java_code_get\"><field name=\"CODE\">itemstack.getItem() instanceof ArmorItem item</field></block></value><statement name=\"DO3\"><block type=\"controls_if\" collapsed=\"true\"><mutation elseif=\"2\" else=\"1\"></mutation><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">item.getType() == ArmorItem.Type.HELMET</field></block></value><statement name=\"DO0\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.head</field></block></value></block></value></block></value></block></statement><value name=\"IF1\"><block type=\"java_code_get\"><field name=\"CODE\">item.getType() == ArmorItem.Type.CHESTPLATE</field></block></value><statement name=\"DO1\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.chest</field></block></value></block></value></block></value></block></statement><value name=\"IF2\"><block type=\"java_code_get\"><field name=\"CODE\">item.getType() == ArmorItem.Type.LEGGINGS</field></block></value><statement name=\"DO2\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.legs</field></block></value></block></value></block></value></block></statement><statement name=\"ELSE\"><block type=\"new_tooltip_line\"><value name=\"tooltiptext\"><block type=\"text_join\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">§7</field></block></value><value name=\"ADD1\"><block type=\"get_localized_text\"><value name=\"key\"><block type=\"text\"><field name=\"TEXT\">item.modifiers.feet</field></block></value></block></value></block></value></block></statement></block></statement><next><block type=\"java_code\"><field name=\"CODE\">List&lt;String&gt; tips = new ArrayList&lt;&gt;();</field><next><block type=\"java_code\"><field name=\"CODE\">for (int i = 0; i &lt; modifiers.size(); i++) {&amp;#10;    String mod = modifiers.get(modifiers.size() - 1 - i).getString();&amp;#10;    String color = mod.contains(\"+\") ? \" §9\" : \" §c\";&amp;#10;    tips.add(color + mod);&amp;#10;}</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Shield</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"java_code_get\"><field name=\"CODE\">classname.equals(\"se.mickelus.tetra.items.modular.impl.shield.ModularShieldItem\")</field></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">QualityEquipmentModVariables.tetraBows.contains(classname)</field></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">erasures.clear();</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><block type=\"get_tooltip_line_count\"></block></value><statement name=\"DO\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">AND</field><value name=\"A\"><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"item_istype\"><field name=\"item_type\">Shield</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">!classname.equals(\"se.mickelus.tetra.items.modular.impl.shield.ModularShieldItem\")</field></block></value></block></value><statement name=\"DO0\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">(tooltip.get(index2).getString().equals(Component.translatable(\"item.modifiers.mainhand\").getString()) || tooltip.get(index2).getString().equals(Component.translatable(\"item.modifiers.offhand\").getString())) &amp;&amp; tooltip.get(index2 + 1).getString().isEmpty()</field></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">erasures.add(index2);&amp;#10;erasures.add(index2 + 1);</field></block></statement></block></statement><statement name=\"ELSE\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">tooltip.get(index2).getString().equals(Component.translatable(\"item.modifiers.offhand\").getString()) &amp;&amp; tooltip.get(index2 + 1).getString().isEmpty()</field></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">erasures.add(index2);&amp;#10;erasures.add(index2 + 1);</field></block></statement></block></statement></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"logic_binary_ops\" inline=\"false\"><field name=\"OP\">OR</field><value name=\"A\"><block type=\"item_istype\"><field name=\"item_type\">Bow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><value name=\"B\"><block type=\"item_istype\"><field name=\"item_type\">Crossbow</field><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value></block></value><value name=\"B\"><block type=\"java_code_get\"><field name=\"CODE\">QualityEquipmentModVariables.tetraBows.contains(classname)</field></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">for (int i = 0; i &lt; tips.size() / 2; i++)&amp;#10;    tips.remove(tips.size() - 1);</field></block></statement><next><block type=\"java_code\"><field name=\"CODE\">for (int i = 0; i &lt; erasures.size(); i++)&amp;#10;    tooltip.remove(erasures.get(i) - i);</field></block></next></block></next></block></next></block></statement><next><block type=\"java_code\"><field name=\"CODE\">        Collections.sort(tips, new Comparator&lt;String&gt;() {&amp;#10;            @Override&amp;#10;            public int compare(String s1, String s2) {&amp;#10;                if (s1.contains(\"-\") &amp;&amp; s2.contains(\"+\")) {&amp;#10;                    return 1; // move s1 below s2&amp;#10;                } else if (s1.contains(\"+\") &amp;&amp; s2.contains(\"-\")) {&amp;#10;                    return -1; // move s2 below s1&amp;#10;                } else {&amp;#10;                    return s1.compareTo(s2); // regular alphabetical order&amp;#10;                }&amp;#10;            }&amp;#10;        });</field><next><block type=\"java_code\"><field name=\"CODE\">for (String tip : tips)&amp;#10;    tooltip.add(Component.literal(tip));</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"java_code_get\"><field name=\"CODE\">((ItemTooltipEvent)event).getFlags().isAdvanced()</field></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">tooltip.add(idc);&amp;#10;tooltip.add(nbtc);</field></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block></next></block></next></block></xml>"
  }
}